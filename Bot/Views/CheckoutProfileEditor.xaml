<Window x:Class="Bot.Views.CheckoutProfileEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bot.Views"
        xmlns:vr="clr-namespace:Bot.ValidationRules"
        mc:Ignorable="d"
        Title="Edit Checkout Profile" Height="569" Width="654" ResizeMode="NoResize">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="144"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Grid Margin="0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="ProfileNameTextBox" Height="23" Margin="10,0,30,0" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Center" Grid.Column="1" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans Light" Style="{DynamicResource ErrorStyle}" BorderBrush="#FFC5C5C5">
                <Binding Path="Name" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vr:RequiredValidationRule ValidatesOnTargetUpdated="True"></vr:RequiredValidationRule>
                        <vr:ForbiddenSymbolsValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox x:Name="EmailTextBox" Height="23" Margin="10,0,30,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Center" Grid.Column="1" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans Light" Style="{DynamicResource ErrorStyle}" BorderBrush="#FFC5C5C5">
                <Binding Path="Email" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vr:RequiredValidationRule ValidatesOnTargetUpdated="True"></vr:RequiredValidationRule>
                        <vr:EmailValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label Grid.Row="0" Grid.Column="0" x:Name="label" Content="Profile Name" HorizontalAlignment="Left" Margin="10,0" VerticalAlignment="Center" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans SemiBold"/>
            <Label x:Name="label1" Content="Email Address" HorizontalAlignment="Left" Margin="10,0" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans SemiBold"/>
            <TextBlock Text="Buy Limit (0 - for unlimited)" Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" Margin="10,0" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans SemiBold" TextWrapping="Wrap" Padding="5"/>
            <TextBox x:Name="BuyLinitTextBox" Grid.Column="1" Grid.Row="2" Style="{StaticResource ErrorStyle}" VerticalAlignment="Center" Height="23" Margin="10,0,30,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="#FFC5C5C5" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans Light">
                <Binding Path="BuyLimit" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vr:RequiredValidationRule ValidatesOnTargetUpdated="True"/>
                        <vr:OnlyNumbersValidationRule ValidatesOnTargetUpdated="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
        </Grid>
        <GroupBox x:Name="groupBox" Header="Billing Address" Margin="10,0" Grid.Row="1" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans SemiBold">
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="24"/>
                </Grid.RowDefinitions>
                <TextBlock Style="{DynamicResource ErrorStyle}" x:Name="BillingAddressTextBlock" Margin="0,0,30,0" TextWrapping="Wrap" Grid.Row="0" Padding="10,20,10,0" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans Light" FontSize="14" VerticalAlignment="Stretch">
                    <TextBlock.Text>
                        <Binding Path="BillingAddress" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <vr:RequiredValidationRule ValidatesOnTargetUpdated="True"></vr:RequiredValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBlock.Text>
                </TextBlock>
                <Button x:Name="button" Command="{Binding EditBillingAddress}" Style="{StaticResource ResourceKey={x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Left" Margin="0" Grid.Row="1" VerticalAlignment="Top" Width="24" Height="24" Padding="0">
                    <Image Source="/Resources/Images/edit_24.png"></Image>
                </Button>
            </Grid>
        </GroupBox>
        <GroupBox x:Name="groupBox_Copy" Header="Shipping Address" Margin="10,0" Grid.Row="2" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans SemiBold">
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="24"/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="ShippingAddressTextBlock" Margin="0,0,30,0" TextWrapping="Wrap" Grid.Row="0" FontSize="14" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans Light" Padding="10,20,10,0" Style="{DynamicResource ErrorStyle}" VerticalAlignment="Stretch">
                    <TextBlock.Text>
                        <Binding Path="ShippingAddress" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <vr:RequiredValidationRule ValidatesOnTargetUpdated="True"></vr:RequiredValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBlock.Text>
                </TextBlock>
                <Button x:Name="button_1" Command="{Binding EditShippingAddress}" Style="{StaticResource ResourceKey={x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Left" Margin="0" Grid.Row="1" VerticalAlignment="Top" Width="24" Height="24" Padding="0">
                    <Image Source="/Resources/Images/edit_24.png"></Image>
                </Button>
                <CheckBox x:Name="checkBox" IsChecked="{Binding IsShippingAsBilling}" Content="Check if same as billing address" HorizontalAlignment="Left" Margin="29,3,0,0" Grid.Row="1" VerticalAlignment="Center" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans Light"/>
            </Grid>
        </GroupBox>
        <GroupBox x:Name="groupBox_Copy1" Header="Payment Information" Margin="10,0" Grid.Row="3" FontFamily="/ProjectDestroyer;component/Resources/Fonts/#Open Sans SemiBold">
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="24"/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="PayCardTextBlock" Margin="0,0,30,0" TextWrapping="Wrap" Grid.Row="0" Padding="10,20,10,0" FontFamily="Consolas" FontSize="14" Style="{DynamicResource ErrorStyle}" VerticalAlignment="Stretch">
                    <TextBlock.Text>
                        <Binding Path="PayCard" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <vr:RequiredValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBlock.Text>
                </TextBlock>
                <Button x:Name="button1" Command="{Binding EditPayCard}" Style="{StaticResource ResourceKey={x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Left" Margin="0" Grid.Row="1" VerticalAlignment="Top" Width="24" Height="24" Padding="0">
                    <Image Source="/Resources/Images/edit_24.png"/>
                </Button>
            </Grid>
        </GroupBox>
        <Button x:Name="button2" Content="Save" HorizontalAlignment="Left" Margin="561,12,0,0" Grid.Row="4" VerticalAlignment="Top" Width="75" Click="button2_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="IsEnabled" Value="false" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding  ElementName=ProfileNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding  ElementName=EmailTextBox, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding  ElementName=BillingAddressTextBlock, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding  ElementName=ShippingAddressTextBlock, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding  ElementName=PayCardTextBlock, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding  ElementName=BuyLinitTextBox, Path=(Validation.HasError)}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" 
                                    Value="true" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="button3" Content="Cancel" HorizontalAlignment="Left" Margin="481,12,0,0" Grid.Row="4" VerticalAlignment="Top" Width="75" Click="button3_Click"/>

    </Grid>
</Window>
